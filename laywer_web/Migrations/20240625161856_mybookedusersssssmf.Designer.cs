// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using laywer_web.Models;

#nullable disable

namespace laywer_web.Migrations
{
    [DbContext(typeof(mycontext))]
    [Migration("20240625161856_mybookedusersssssmf")]
    partial class mybookedusersssssmf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("laywer_web.Models.admindetail", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("admin_id"));

                    b.Property<string>("admin_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("admin_id");

                    b.ToTable("tbl_admindetails");
                });

            modelBuilder.Entity("laywer_web.Models.adminlogin", b =>
                {
                    b.Property<int>("admin_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("admin_id"));

                    b.Property<string>("admin_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("admin_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("admin_id");

                    b.ToTable("tbl_admin");
                });

            modelBuilder.Entity("laywer_web.Models.bookeduser", b =>
                {
                    b.Property<int>("Booked_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booked_id"));

                    b.Property<string>("Booked_useremail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Booked_username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Booked_usernumber")
                        .HasColumnType("int");

                    b.Property<int>("lawyer_id")
                        .HasColumnType("int");

                    b.Property<string>("lawyer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("slot_time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("status_updates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Booked_id");

                    b.ToTable("tbl_bokedappointment");
                });

            modelBuilder.Entity("laywer_web.Models.contact", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_msg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_sub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("tbl_contact");
                });

            modelBuilder.Entity("laywer_web.Models.lawyersdetail", b =>
                {
                    b.Property<int>("lawyer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lawyer_id"));

                    b.Property<string>("Lawyer_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lawyer_Number")
                        .HasColumnType("int");

                    b.Property<string>("lawyer_dealed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawyer_dis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawyer_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawyer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawyer_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lawyer_id");

                    b.ToTable("tbL_lawyersdetail");
                });

            modelBuilder.Entity("laywer_web.Models.laywer", b =>
                {
                    b.Property<int>("lawyer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lawyer_id"));

                    b.Property<string>("lawyer_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawyer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lawyer_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lawyer_id");

                    b.ToTable("tbl_lawyers");
                });

            modelBuilder.Entity("laywer_web.Models.mycities", b =>
                {
                    b.Property<int>("city_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("city_id"));

                    b.Property<string>("city_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("coun_id")
                        .HasColumnType("int");

                    b.HasKey("city_id");

                    b.HasIndex("coun_id");

                    b.ToTable("tbl_mycitiyes");
                });

            modelBuilder.Entity("laywer_web.Models.mycountries", b =>
                {
                    b.Property<int>("country_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("country_id"));

                    b.Property<string>("country_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("country_id");

                    b.ToTable("tbl_mycountrry");
                });

            modelBuilder.Entity("laywer_web.Models.user", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("laywer_web.Models.mycities", b =>
                {
                    b.HasOne("laywer_web.Models.mycountries", "mycountries")
                        .WithMany("cites")
                        .HasForeignKey("coun_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mycountries");
                });

            modelBuilder.Entity("laywer_web.Models.mycountries", b =>
                {
                    b.Navigation("cites");
                });
#pragma warning restore 612, 618
        }
    }
}
